{"ast":null,"code":"var _jsxFileName = \"D:\\\\Weather-app\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n  const fetchWeather = async () => {\n    setError('');\n    setWeather(null);\n    try {\n      const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n      const response = await axios.get(`https://api.weatherapi.com/v1/forecast.json`, {\n        params: {\n          key: apiKey,\n          q: city,\n          days: 3,\n          // Number of days for daily forecast\n          aqi: 'no',\n          alerts: 'no'\n        }\n      });\n      setWeather(response.data);\n    } catch (err) {\n      setError('Could not fetch weather. Please check the city name.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"Enter city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [weather.location.name, \", \", weather.location.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current: \", weather.current.temp_c, \"\\xB0C, \", weather.current.condition.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: weather.forecast.forecastday.map(day => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [day.date, \": \", day.day.avgtemp_c, \"\\xB0C, \", day.day.condition.text]\n        }, day.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hourly Forecast (Today)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          maxHeight: 200,\n          overflowY: 'scroll'\n        },\n        children: weather.forecast.forecastday[0].hour.map(hour => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [hour.time.split(' ')[1], \": \", hour.temp_c, \"\\xB0C, \", hour.condition.text]\n        }, hour.time, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1BF7//Z/qjRy1VMIkjBP8tUeTeU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","city","setCity","weather","setWeather","error","setError","fetchWeather","apiKey","process","env","REACT_APP_WEATHER_API_KEY","response","get","params","key","q","days","aqi","alerts","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","style","color","location","name","country","current","temp_c","condition","text","forecast","forecastday","map","day","date","avgtemp_c","maxHeight","overflowY","hour","time","split","_c","$RefreshReg$"],"sources":["D:/Weather-app/weather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n\n  const fetchWeather = async () => {\n    setError('');\n    setWeather(null);\n    try {\n      const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n      const response = await axios.get(\n        `https://api.weatherapi.com/v1/forecast.json`,\n        {\n          params: {\n            key: apiKey,\n            q: city,\n            days: 3, // Number of days for daily forecast\n            aqi: 'no',\n            alerts: 'no'\n          }\n        }\n      );\n      setWeather(response.data);\n    } catch (err) {\n      setError('Could not fetch weather. Please check the city name.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Weather App</h1>\n      <input\n        value={city}\n        onChange={e => setCity(e.target.value)}\n        placeholder=\"Enter city\"\n      />\n      <button onClick={fetchWeather}>Get Weather</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {weather && (\n        <div>\n          <h2>{weather.location.name}, {weather.location.country}</h2>\n          <h3>Current: {weather.current.temp_c}°C, {weather.current.condition.text}</h3>\n          <h3>Daily Forecast</h3>\n          <ul>\n            {weather.forecast.forecastday.map(day => (\n              <li key={day.date}>\n                {day.date}: {day.day.avgtemp_c}°C, {day.day.condition.text}\n              </li>\n            ))}\n          </ul>\n          <h3>Hourly Forecast (Today)</h3>\n          <ul style={{ maxHeight: 200, overflowY: 'scroll' }}>\n            {weather.forecast.forecastday[0].hour.map(hour => (\n              <li key={hour.time}>\n                {hour.time.split(' ')[1]}: {hour.temp_c}°C, {hour.condition.text}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}