{"ast":null,"code":"var _jsxFileName = \"D:\\\\Weather-app\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n  const fetchWeather = async () => {\n    setError('');\n    setWeather(null);\n    try {\n      const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n      const response = await axios.get(`https://api.weatherapi.com/v1/forecast.json`, {\n        params: {\n          key: apiKey,\n          q: city,\n          days: 3,\n          aqi: 'no',\n          alerts: 'no'\n        }\n      });\n      setWeather(response.data);\n    } catch (err) {\n      setError('Could not fetch weather. Please check the city name.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: city,\n        onChange: e => setCity(e.target.value),\n        placeholder: \"Enter city\",\n        className: \"city-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchWeather,\n        className: \"search-btn\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-weather\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [weather.location.name, \", \", weather.location.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Current: \", weather.current.temp_c, \"\\xB0C, \", weather.current.condition.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-forecast\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Daily Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: weather.forecast.forecastday.map(day => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [day.date, \": \", day.day.avgtemp_c, \"\\xB0C, \", day.day.condition.text]\n          }, day.date, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hourly-forecast\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Hourly Forecast (Today)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: weather.forecast.forecastday[0].hour.map(hour => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [hour.time.split(' ')[1], \": \", hour.temp_c, \"\\xB0C, \", hour.condition.text]\n          }, hour.time, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1BF7//Z/qjRy1VMIkjBP8tUeTeU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","city","setCity","weather","setWeather","error","setError","fetchWeather","apiKey","process","env","REACT_APP_WEATHER_API_KEY","response","get","params","key","q","days","aqi","alerts","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","location","name","country","current","temp_c","condition","text","forecast","forecastday","map","day","date","avgtemp_c","hour","time","split","_c","$RefreshReg$"],"sources":["D:/Weather-app/weather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n\n  const fetchWeather = async () => {\n    setError('');\n    setWeather(null);\n    try {\n      const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n      const response = await axios.get(\n        `https://api.weatherapi.com/v1/forecast.json`,\n        {\n          params: {\n            key: apiKey,\n            q: city,\n            days: 3,\n            aqi: 'no',\n            alerts: 'no'\n          }\n        }\n      );\n      setWeather(response.data);\n    } catch (err) {\n      setError('Could not fetch weather. Please check the city name.');\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-title\">Weather App</h1>\n      <div className=\"search-section\">\n        <input\n          value={city}\n          onChange={e => setCity(e.target.value)}\n          placeholder=\"Enter city\"\n          className=\"city-input\"\n        />\n        <button onClick={fetchWeather} className=\"search-btn\">Get Weather</button>\n      </div>\n      {error && <p className=\"error-message\">{error}</p>}\n      {weather && (\n        <div className=\"weather-section\">\n          <div className=\"current-weather\">\n            <h2>{weather.location.name}, {weather.location.country}</h2>\n            <h3>\n              Current: {weather.current.temp_c}°C, {weather.current.condition.text}\n            </h3>\n          </div>\n          <div className=\"daily-forecast\">\n            <h3>Daily Forecast</h3>\n            <ul>\n              {weather.forecast.forecastday.map(day => (\n                <li key={day.date}>\n                  {day.date}: {day.day.avgtemp_c}°C, {day.day.condition.text}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"hourly-forecast\">\n            <h3>Hourly Forecast (Today)</h3>\n            <ul>\n              {weather.forecast.forecastday[0].hour.map(hour => (\n                <li key={hour.time}>\n                  {hour.time.split(' ')[1]}: {hour.temp_c}°C, {hour.condition.text}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}